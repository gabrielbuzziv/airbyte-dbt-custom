{{ config(
    indexes = [{'columns':['_airbyte_emitted_at'],'type':'btree'}],
    unique_key = '_airbyte_ab_id',
    schema = "_airbyte_public",
    tags = [ "top-level-intermediate" ]
) }}
-- SQL model to cast each column to its adequate SQL type converted from the JSON schema type
-- depends_on: {{ ref('users_ab1') }}
select
    cast({{ adapter.quote('id') }} as {{ dbt_utils.type_string() }}) as {{ adapter.quote('id') }},
    cast(city as {{ dbt_utils.type_string() }}) as city,
    cast({{ adapter.quote('name') }} as {{ dbt_utils.type_string() }}) as {{ adapter.quote('name') }},
    cast(slug as {{ dbt_utils.type_string() }}) as slug,
    cast(about as {{ dbt_utils.type_string() }}) as about,
    cast(cover as {{ dbt_utils.type_string() }}) as cover,
    cast(email as {{ dbt_utils.type_string() }}) as email,
    cast(phone as {{ dbt_utils.type_string() }}) as phone,
    cast({{ adapter.quote('state') }} as {{ dbt_utils.type_string() }}) as {{ adapter.quote('state') }},
    cast({{ adapter.quote('token') }} as {{ dbt_utils.type_string() }}) as {{ adapter.quote('token') }},
    cast(avatar as {{ dbt_utils.type_string() }}) as avatar,
    cast(github as {{ dbt_utils.type_string() }}) as github,
    cast(status as {{ dbt_utils.type_string() }}) as status,
    cast(utm_id as {{ dbt_utils.type_string() }}) as utm_id,
    cast(country as {{ dbt_utils.type_string() }}) as country,
    cast(discord as {{ dbt_utils.type_string() }}) as discord,
    {{ cast_to_boolean('pioneer') }} as pioneer,
    cast(twitter as {{ dbt_utils.type_string() }}) as twitter,
    cast(apple_id as {{ dbt_utils.type_string() }}) as apple_id,
    cast({{ adapter.quote('document') }} as {{ dbt_utils.type_string() }}) as {{ adapter.quote('document') }},
    cast(linkedin as {{ dbt_utils.type_string() }}) as linkedin,
    cast(og_image as {{ dbt_utils.type_string() }}) as og_image,
    cast({{ adapter.quote('password') }} as {{ dbt_utils.type_string() }}) as {{ adapter.quote('password') }},
    cast(timezone as {{ dbt_utils.type_string() }}) as timezone,
    cast(utm_term as {{ dbt_utils.type_string() }}) as utm_term,
    {{ cast_to_boolean('verified') }} as verified,
    cast(github_id as {{ dbt_utils.type_string() }}) as github_id,
    {{ cast_to_boolean('onboarded') }} as onboarded,
    cast({{ empty_string_to_null('blocked_at') }} as {{ type_timestamp_with_timezone() }}) as blocked_at,
    cast(company_id as {{ dbt_utils.type_string() }}) as company_id,
    cast({{ empty_string_to_null('created_at') }} as {{ type_timestamp_with_timezone() }}) as created_at,
    cast(discord_id as {{ dbt_utils.type_string() }}) as discord_id,
    {{ cast_to_boolean('has_credit') }} as has_credit,
    {{ cast_to_boolean('is_visible') }} as is_visible,
    cast({{ empty_string_to_null('last_login') }} as {{ type_timestamp_with_timezone() }}) as last_login,
    cast(occupation as {{ dbt_utils.type_string() }}) as occupation,
    cast(station_id as {{ dbt_utils.type_string() }}) as station_id,
    cast({{ empty_string_to_null('updated_at') }} as {{ type_timestamp_with_timezone() }}) as updated_at,
    cast(utm_medium as {{ dbt_utils.type_string() }}) as utm_medium,
    cast(utm_source as {{ dbt_utils.type_string() }}) as utm_source,
    cast(utm_content as {{ dbt_utils.type_string() }}) as utm_content,
    cast(company_name as {{ dbt_utils.type_string() }}) as company_name,
    cast(github_token as {{ dbt_utils.type_string() }}) as github_token,
    cast(utm_campaign as {{ dbt_utils.type_string() }}) as utm_campaign,
    cast({{ empty_string_to_null('utm_saved_at') }} as {{ type_timestamp_with_timezone() }}) as utm_saved_at,
    cast(subscriber_id as {{ dbt_utils.type_string() }}) as subscriber_id,
    cast(blocked_status as {{ dbt_utils.type_string() }}) as blocked_status,
    cast(recovery_token as {{ dbt_utils.type_string() }}) as recovery_token,
    {{ cast_to_boolean('onboarded_hubble') }} as onboarded_hubble,
    cast({{ empty_string_to_null('token_created_at') }} as {{ type_timestamp_with_timezone() }}) as token_created_at,
    cast(registration_token as {{ dbt_utils.type_string() }}) as registration_token,
    {{ cast_to_boolean('use_shipping_as_billing') }} as use_shipping_as_billing,
    _airbyte_ab_id,
    _airbyte_emitted_at,
    {{ current_timestamp() }} as _airbyte_normalized_at
from {{ ref('users_ab1') }}
-- users
where 1 = 1

